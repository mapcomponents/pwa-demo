import { tileUrl, appUrl } from './tileUrl';

const getStyle = () => {
	return {
		version: 8,
		name: 'Fiord Color',
		metadata: {
			'mapbox:autocomposite': false,
			'mapbox:groups': {
				'101da9f13b64a08fa4b6ac1168e89e5f': { collapsed: true, name: 'Places' },
				a14c9607bc7954ba1df7205bf660433f: {
					collapsed: true,
					name: 'Boundaries',
				},
				b6371a3f2f5a9932464fa3867530a2e5: {
					collapsed: true,
					name: 'Transportation',
				},
			},
			'mapbox:type': 'template',
			'openmaptiles:version': '3.x',
		},
		center: [0.41134944662525186, -1.7053025658242404e-13],
		zoom: 1.3869401319571246,
		bearing: 0,
		pitch: 0,
		sources: {
			openmaptiles: {
				type: 'vector',
				pixel_scale: '256',
				mtime: '1624265905133',
				name: 'OpenMapTiles',
				format: 'pbf',
				bounds: [-74.2324546, 27.6272074, 68.5788605, 83.718314],
				center: '6.1,53.0,1',
				minzoom: 0,
				maxzoom: 14,
				attribution:
					'<a href="https://www.openmaptiles.org/" target="_blank">&copy; OpenMapTiles</a> <a href="https://www.openstreetmap.org/copyright" target="_blank">&copy; OpenStreetMap contributors</a>',
				description: 'A tileset showcasing all layers in OpenMapTiles. https://openmaptiles.org',
				version: '3.12.1',
				id: 'openmaptiles',
				filesize: '29934882816',
				basename: 'europe-0-14',
				profile: 'mercator',
				scale: 1,
				tiles: [tileUrl],
				tilejson: '2.0.0',
				scheme: 'xyz',
				vector_layers: [
					{
						id: 'water',
						description:
							'Water polygons representing oceans and lakes. Covered watered areas are excluded (`covered=yes`).nOn low zoom levels all water originates from Natural Earth. To get a more correct display of the south pole you should alsonstyle the covering ice shelves over the water.nOn higher zoom levels water polygons from [OpenStreetMapData](http://osmdata.openstreetmap.de/) are used.nThe polygons are split into many smaller polygons to improve rendering performance.nThis however can lead to less rendering options in clients since these boundaries show up. So you might not benable to use border styling for ocean water features.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							class: 'String',
							intermittent: 'Number',
							brunnel: 'String',
						},
					},
					{
						id: 'waterway',
						description:
							'OpenStreetMap [waterways](https://wiki.openstreetmap.org/wiki/Waterways) for higher zoom levels (z9 and more)nand Natural Earth rivers and lake centerlines for low zoom levels (z3 - z8).nLinestrings without a name or which are too short are filterednout at low zoom levels.nTill z11 there is `river` class only, in z12 there is also `canal` generated,nstarting z13 there is no generalization according to `class` field applied.nWaterways do not have a `subclass` field.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							class: 'String',
							brunnel: 'String',
							intermittent: 'Number',
						},
					},
					{
						id: 'landcover',
						description:
							'Landcover is used to describe the physical material at the surface of the earth. At lower zoom levels this isnfrom Natural Earth data for glaciers and ice shelves and at higher zoom levels the landcover is [implied by OSM tags](http://wiki.openstreetmap.org/wiki/Landcover). The most common use case for this layern  is to style wood (`class=wood`) and grass (`class=grass`) areas.',
						minzoom: 0,
						maxzoom: 14,
						fields: { class: 'String', subclass: 'String' },
					},
					{
						id: 'landuse',
						description:
							'Landuse is used to describe use of land by humans. At lower zoom levels this isnfrom Natural Earth data for residential (urban) areas and at higher zoom levels mostly OSM `landuse` tags.',
						minzoom: 0,
						maxzoom: 14,
						fields: { class: 'String' },
					},
					{
						id: 'mountain_peak',
						description: '[Natural peaks](http://wiki.openstreetmap.org/wiki/Tag:natural%3Dpeak)',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							osm_id: 'Number',
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							class: 'String',
							ele: 'Number',
							ele_ft: 'Number',
							rank: 'Number',
						},
					},
					{
						id: 'park',
						description:
							'The park layer contains parks from OpenStreetMap tagged withn[`boundary=national_park`](http://wiki.openstreetmap.org/wiki/Tag:boundary%3Dnational_park),n[`boundary=protected_area`](http://wiki.openstreetmap.org/wiki/Tag:boundary%3Dprotected_area),nor [`leisure=nature_reserve`](http://wiki.openstreetmap.org/wiki/Tag:leisure%3Dnature_reserve).',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							class: 'String',
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							rank: 'Number',
						},
					},
					{
						id: 'boundary',
						description:
							'Contains administrative boundaries as linestrings.nUntil z4 [Natural Earth data](http://www.naturalearthdata.com/downloads/) is used after whichnOSM boundaries ([`boundary=administrative`](http://wiki.openstreetmap.org/wiki/Tag:boundary%3Dadministrative))nare present from z5 to z14 (also for maritime boundaries with `admin_level <= 2` at z4).nOSM data contains several [`admin_level`](http://wiki.openstreetmap.org/wiki/Tag:boundary%3Dadministrative#admin_level)nbut for most styles it makes sense to just style `admin_level=2` and `admin_level=4`.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							admin_level: 'Number',
							adm0_l: 'String',
							adm0_r: 'String',
							disputed: 'Number',
							disputed_name: 'String',
							claimed_by: 'String',
							maritime: 'Number',
						},
					},
					{
						id: 'aeroway',
						description:
							'Aeroway polygons based of OpenStreetMap [aeroways](http://wiki.openstreetmap.org/wiki/Aeroways).nAirport buildings are contained in the **building** layer but allnother airport related polygons can be found in the **aeroway** layer.',
						minzoom: 0,
						maxzoom: 14,
						fields: { ref: 'String', class: 'String' },
					},
					{
						id: 'transportation',
						description:
							'**transportation** contains roads, railways, aerial ways, and shippingn lines.nThis layer is directly derived from the OSM road hierarchy.nAt lower zoom levels major highways from Natural Earth are used.nIt contains all roads from motorways to primary, secondary andntertiary roads to residential roads andnfoot paths. Styling the roads is the most essential part of the map.nThe `transportation` layer also contains polygons for features like plazas.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							class: 'String',
							subclass: 'String',
							oneway: 'Number',
							ramp: 'Number',
							brunnel: 'String',
							service: 'String',
							layer: 'Number',
							level: 'Number',
							indoor: 'Number',
							bicycle: 'String',
							foot: 'String',
							horse: 'String',
							mtb_scale: 'String',
							surface: 'String',
						},
					},
					{
						id: 'building',
						description:
							'All [OSM Buildings](http://wiki.openstreetmap.org/wiki/Buildings). All building tags are imported ([`building=*`](http://wiki.openstreetmap.org/wiki/Key:building)). The buildings are not yet ready for 3D rendering support and any help to improventhis is welcomed.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							osm_id: 'Number',
							render_height: 'Number',
							render_min_height: 'Number',
							colour: 'String',
							hide_3d: 'Boolean',
						},
					},
					{
						id: 'water_name',
						description:
							'Lake center lines for labelling lake bodies.nThis is based of the [osm-lakelines](https://github.com/lukasmartinelli/osm-lakelines) projectnwhich derives nice centerlines from OSM water bodies. Only the most important lakes contain labels.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							osm_id: 'Number',
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							class: 'String',
							intermittent: 'Number',
						},
					},
					{
						id: 'transportation_name',
						description:
							'This is the layer for labelling the highways. Only highways that are named `name=*` and are long enoughnto place text upon appear. The OSM roads are stitched together if they contain the same namento have better label placement than having many small linestrings.nFor motorways you should use the `ref` field to label them while for other roads you should use `name`.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							ref: 'String',
							ref_length: 'Number',
							network: 'String',
							class: 'String',
							subclass: 'String',
							brunnel: 'String',
							layer: 'Number',
							level: 'Number',
							indoor: 'Number',
						},
					},
					{
						id: 'place',
						description:
							'The place layer consists out of [countries](http://wiki.openstreetmap.org/wiki/Tag:place%3Dcountry),n[states](http://wiki.openstreetmap.org/wiki/Tag:place%3Dstate) and [cities](http://wiki.openstreetmap.org/wiki/Key:place).nApart from the roads this is also one of the more important layers to create a beautiful map.nWe suggest you use different font styles and sizes to create a text hierarchy.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							osm_id: 'Number',
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							class: 'String',
							rank: 'Number',
							capital: 'Number',
							iso_a2: 'String',
						},
					},
					{
						id: 'housenumber',
						description:
							'Everything in OpenStreetMap which contains a `addr:housenumber` tag useful for labelling housenumbers on a map.nThis adds significant size to *z14*. For buildings the centroid of the building is used as housenumber.',
						minzoom: 0,
						maxzoom: 14,
						fields: { housenumber: 'String' },
					},
					{
						id: 'poi',
						description:
							'[Points of interests](http://wiki.openstreetmap.org/wiki/Points_of_interest) containingna of a variety of OpenStreetMap tags. Mostly contains amenities, sport, shop and tourist POIs.',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							osm_id: 'Number',
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							class: 'String',
							subclass: 'String',
							agg_stop: 'Number',
							layer: 'Number',
							level: 'Number',
							indoor: 'Number',
							rank: 'Number',
						},
					},
					{
						id: 'aerodrome_label',
						description:
							'[Aerodrome labels](http://wiki.openstreetmap.org/wiki/Tag:aeroway%3Daerodrome)',
						minzoom: 0,
						maxzoom: 14,
						fields: {
							osm_id: 'Number',
							name: 'String',
							name_en: 'String',
							name_de: 'String',
							'name:am': 'String',
							'name:ar': 'String',
							'name:az': 'String',
							'name:be': 'String',
							'name:bg': 'String',
							'name:br': 'String',
							'name:bs': 'String',
							'name:ca': 'String',
							'name:co': 'String',
							'name:cs': 'String',
							'name:cy': 'String',
							'name:da': 'String',
							'name:de': 'String',
							'name:el': 'String',
							'name:en': 'String',
							'name:eo': 'String',
							'name:es': 'String',
							'name:et': 'String',
							'name:eu': 'String',
							'name:fi': 'String',
							'name:fr': 'String',
							'name:fy': 'String',
							'name:ga': 'String',
							'name:gd': 'String',
							'name:he': 'String',
							'name:hi': 'String',
							'name:hr': 'String',
							'name:hu': 'String',
							'name:hy': 'String',
							'name:id': 'String',
							'name:is': 'String',
							'name:it': 'String',
							'name:ja': 'String',
							'name:ja_kana': 'String',
							'name:ja_rm': 'String',
							'name:ja-Latn': 'String',
							'name:ja-Hira': 'String',
							'name:ka': 'String',
							'name:kk': 'String',
							'name:kn': 'String',
							'name:ko': 'String',
							'name:ko-Latn': 'String',
							'name:ku': 'String',
							'name:la': 'String',
							'name:lb': 'String',
							'name:lt': 'String',
							'name:lv': 'String',
							'name:mk': 'String',
							'name:mt': 'String',
							'name:ml': 'String',
							'name:nl': 'String',
							'name:no': 'String',
							'name:oc': 'String',
							'name:pl': 'String',
							'name:pt': 'String',
							'name:rm': 'String',
							'name:ro': 'String',
							'name:ru': 'String',
							'name:sk': 'String',
							'name:sl': 'String',
							'name:sq': 'String',
							'name:sr': 'String',
							'name:sr-Latn': 'String',
							'name:sv': 'String',
							'name:ta': 'String',
							'name:te': 'String',
							'name:th': 'String',
							'name:tr': 'String',
							'name:uk': 'String',
							'name:zh': 'String',
							name_int: 'String',
							'name:latin': 'String',
							'name:nonlatin': 'String',
							class: 'String',
							iata: 'String',
							icao: 'String',
							ele: 'Number',
							ele_ft: 'Number',
						},
					},
				],
			},
		},
		sprite: appUrl + '/map_assets/sprites/fiord-color',
		glyphs: appUrl + '/map_assets/tileserver/fonts/{fontstack}/{range}.pbf',
		layers: [
			{
				id: 'background',
				type: 'background',
				paint: { 'background-color': '#45516E' },
			},
			{
				id: 'water',
				type: 'fill',
				source: 'openmaptiles',
				'source-layer': 'water',
				filter: ['==', '$type', 'Polygon'],
				layout: { visibility: 'visible' },
				paint: { 'fill-antialias': false, 'fill-color': '#38435C' },
			},
			{
				id: 'landcover_ice_shelf',
				type: 'fill',
				source: 'openmaptiles',
				'source-layer': 'landcover',
				maxzoom: 8,
				filter: ['all', ['==', '$type', 'Polygon'], ['==', 'subclass', 'ice_shelf']],
				layout: { visibility: 'visible' },
				paint: { 'fill-color': 'hsl(232, 33%, 34%)', 'fill-opacity': 0.4 },
			},
			{
				id: 'landuse_residential',
				type: 'fill',
				source: 'openmaptiles',
				'source-layer': 'landuse',
				maxzoom: 16,
				filter: ['all', ['==', '$type', 'Polygon'], ['==', 'subclass', 'residential']],
				layout: { visibility: 'visible' },
				paint: {
					'fill-color': 'rgb(234, 234, 230)',
					'fill-opacity': {
						base: 0.6,
						stops: [
							[8, 0.8],
							[9, 0.6],
						],
					},
				},
			},
			{
				id: 'landcover_wood',
				type: 'fill',
				source: 'openmaptiles',
				'source-layer': 'landcover',
				minzoom: 10,
				filter: ['all', ['==', '$type', 'Polygon'], ['==', 'class', 'wood']],
				layout: { visibility: 'visible' },
				paint: {
					'fill-color': 'hsla(232, 18%, 30%, 0.57)',
					'fill-opacity': {
						base: 1,
						stops: [
							[9, 0],
							[12, 1],
						],
					},
				},
			},
			{
				id: 'park',
				type: 'fill',
				source: 'openmaptiles',
				'source-layer': 'park',
				filter: ['==', '$type', 'Polygon'],
				layout: { visibility: 'visible' },
				paint: { 'fill-color': 'hsl(204, 17%, 35%)', 'fill-opacity': 0.3 },
			},
			{
				id: 'park_outline',
				type: 'line',
				source: 'openmaptiles',
				'source-layer': 'park',
				filter: ['==', '$type', 'Polygon'],
				layout: {},
				paint: { 'line-color': 'hsl(205, 49%, 31%)', 'line-dasharray': [2, 2] },
			},
			{
				id: 'waterway',
				type: 'line',
				source: 'openmaptiles',
				'source-layer': 'waterway',
				filter: ['==', '$type', 'LineString'],
				layout: { visibility: 'visible' },
				paint: { 'line-color': 'hsl(232, 23%, 28%)', 'line-opacity': 0.6 },
			},
			{
				id: 'building',
				type: 'fill',
				source: 'openmaptiles',
				'source-layer': 'building',
				minzoom: 12,
				filter: ['==', '$type', 'Polygon'],
				paint: {
					'fill-antialias': true,
					'fill-color': 'hsla(232, 47%, 18%, 0.65)',
					'fill-opacity': 0.5,
					'fill-outline-color': 'rgba(212, 212, 212, 0.5)',
				},
			},
			{
				id: 'tunnel_motorway_casing',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 6,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['==', 'brunnel', 'tunnel'], ['==', 'class', 'motorway']],
				],
				layout: {
					'line-cap': 'butt',
					'line-join': 'miter',
					visibility: 'visible',
				},
				paint: {
					'line-color': '#3C4357',
					'line-opacity': 1,
					'line-width': {
						base: 1.4,
						stops: [
							[5.8, 0],
							[6, 3],
							[20, 40],
						],
					},
				},
			},
			{
				id: 'tunnel_motorway_inner',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 6,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['==', 'brunnel', 'tunnel'], ['==', 'class', 'motorway']],
				],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 18%, 21%)',
					'line-width': {
						base: 1.4,
						stops: [
							[4, 2],
							[6, 1.3],
							[20, 30],
						],
					},
				},
			},
			{
				id: 'aeroway-taxiway',
				type: 'line',
				metadata: { 'mapbox:group': '1444849345966.4436' },
				source: 'openmaptiles',
				'source-layer': 'aeroway',
				minzoom: 12,
				filter: ['all', ['in', 'class', 'taxiway']],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 22%, 45%)',
					'line-opacity': 1,
					'line-width': {
						base: 1.55,
						stops: [
							[13, 1.8],
							[20, 20],
						],
					},
				},
			},
			{
				id: 'aeroway-runway-casing',
				type: 'line',
				metadata: { 'mapbox:group': '1444849345966.4436' },
				source: 'openmaptiles',
				'source-layer': 'aeroway',
				minzoom: 11,
				filter: ['all', ['in', 'class', 'runway']],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 22%, 45%)',
					'line-opacity': 1,
					'line-width': {
						base: 1.5,
						stops: [
							[11, 6],
							[17, 55],
						],
					},
				},
			},
			{
				id: 'aeroway-area',
				type: 'fill',
				metadata: { 'mapbox:group': '1444849345966.4436' },
				source: 'openmaptiles',
				'source-layer': 'aeroway',
				minzoom: 4,
				filter: ['all', ['==', '$type', 'Polygon'], ['in', 'class', 'runway', 'taxiway']],
				layout: { visibility: 'visible' },
				paint: { 'fill-color': 'hsl(224, 20%, 29%)', 'fill-opacity': 1 },
			},
			{
				id: 'aeroway-runway',
				type: 'line',
				metadata: { 'mapbox:group': '1444849345966.4436' },
				source: 'openmaptiles',
				'source-layer': 'aeroway',
				minzoom: 11,
				maxzoom: 24,
				filter: ['all', ['in', 'class', 'runway'], ['==', '$type', 'LineString']],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 20%, 29%)',
					'line-opacity': 1,
					'line-width': {
						base: 1.5,
						stops: [
							[11, 4],
							[17, 50],
						],
					},
				},
			},
			{
				id: 'road_area_pier',
				type: 'fill',
				metadata: {},
				source: 'openmaptiles',
				'source-layer': 'transportation',
				filter: ['all', ['==', '$type', 'Polygon'], ['==', 'class', 'pier']],
				layout: { visibility: 'visible' },
				paint: { 'fill-antialias': true, 'fill-color': '#45516E' },
			},
			{
				id: 'road_pier',
				type: 'line',
				metadata: {},
				source: 'openmaptiles',
				'source-layer': 'transportation',
				filter: ['all', ['==', '$type', 'LineString'], ['in', 'class', 'pier']],
				layout: { 'line-cap': 'round', 'line-join': 'round' },
				paint: {
					'line-color': '#45516E',
					'line-width': {
						base: 1.2,
						stops: [
							[15, 1],
							[17, 4],
						],
					},
				},
			},
			{
				id: 'highway_path',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				filter: ['all', ['==', '$type', 'LineString'], ['==', 'class', 'path']],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(211, 29%, 38%)',
					'line-dasharray': [2, 2],
					'line-opacity': 1,
					'line-width': {
						base: 1.2,
						stops: [
							[12, 0.5],
							[20, 4],
						],
					},
				},
			},
			{
				id: 'highway_minor',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 8,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['in', 'class', 'minor', 'service', 'track'],
				],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 22%, 45%)',
					'line-opacity': 0.9,
					'line-width': {
						base: 1.55,
						stops: [
							[13, 1.8],
							[20, 20],
						],
					},
				},
			},
			{
				id: 'highway_major_casing',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 11,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['in', 'class', 'primary', 'secondary', 'tertiary', 'trunk'],
				],
				layout: {
					'line-cap': 'butt',
					'line-join': 'miter',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 22%, 45%)',
					'line-dasharray': [12, 0],
					'line-width': {
						base: 1.3,
						stops: [
							[10, 3],
							[20, 23],
						],
					},
				},
			},
			{
				id: 'highway_major_inner',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 11,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['in', 'class', 'primary', 'secondary', 'tertiary', 'trunk'],
				],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': '#3C4357',
					'line-width': {
						base: 1.3,
						stops: [
							[10, 2],
							[20, 20],
						],
					},
				},
			},
			{
				id: 'highway_major_subtle',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				maxzoom: 11,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['in', 'class', 'primary', 'secondary', 'tertiary', 'trunk'],
				],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': '#3D4355',
					'line-opacity': 0.6,
					'line-width': 2,
				},
			},
			{
				id: 'highway_motorway_casing',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 6,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['!in', 'brunnel', 'bridge', 'tunnel'], ['==', 'class', 'motorway']],
				],
				layout: {
					'line-cap': 'butt',
					'line-join': 'miter',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsl(224, 22%, 45%)',
					'line-dasharray': [2, 0],
					'line-opacity': 1,
					'line-width': {
						base: 1.4,
						stops: [
							[5.8, 0],
							[6, 3],
							[20, 40],
						],
					},
				},
			},
			{
				id: 'highway_motorway_inner',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 6,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['!in', 'brunnel', 'bridge', 'tunnel'], ['==', 'class', 'motorway']],
				],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': {
						base: 1,
						stops: [
							[5.8, 'hsla(0, 0%, 85%, 0.53)'],
							[6, 'hsl(224, 20%, 29%)'],
						],
					},
					'line-width': {
						base: 1.4,
						stops: [
							[4, 2],
							[6, 1.3],
							[20, 30],
						],
					},
				},
			},
			{
				id: 'highway_motorway_subtle',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				maxzoom: 6,
				filter: ['all', ['==', '$type', 'LineString'], ['==', 'class', 'motorway']],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-color': 'hsla(239, 45%, 69%, 0.2)',
					'line-width': {
						base: 1.4,
						stops: [
							[4, 2],
							[6, 1.3],
						],
					},
				},
			},
			{
				id: 'railway_transit',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 16,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['==', 'class', 'transit'], ['!in', 'brunnel', 'tunnel']],
				],
				layout: { 'line-join': 'round', visibility: 'visible' },
				paint: { 'line-color': 'hsl(200, 65%, 11%)', 'line-width': 3 },
			},
			{
				id: 'railway_transit_dashline',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 16,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['==', 'class', 'transit'], ['!in', 'brunnel', 'tunnel']],
				],
				layout: { 'line-join': 'round', visibility: 'visible' },
				paint: {
					'line-color': 'hsl(193, 63%, 26%)',
					'line-dasharray': [3, 3],
					'line-width': 2,
				},
			},
			{
				id: 'railway_service',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 16,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['==', 'class', 'rail'], ['has', 'service']],
				],
				layout: { 'line-join': 'round', visibility: 'visible' },
				paint: { 'line-color': 'hsl(200, 65%, 11%)', 'line-width': 3 },
			},
			{
				id: 'railway_service_dashline',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 16,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['==', 'class', 'rail'], ['has', 'service']],
				],
				layout: { 'line-join': 'round', visibility: 'visible' },
				paint: {
					'line-color': 'hsl(193, 63%, 26%)',
					'line-dasharray': [3, 3],
					'line-width': 2,
				},
			},
			{
				id: 'railway',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 13,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['!has', 'service'], ['==', 'class', 'rail']],
				],
				layout: { 'line-join': 'round', visibility: 'visible' },
				paint: {
					'line-color': 'hsl(200, 10%, 18%)',
					'line-width': {
						base: 1.3,
						stops: [
							[16, 3],
							[20, 7],
						],
					},
				},
			},
			{
				id: 'railway_dashline',
				type: 'line',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation',
				minzoom: 13,
				filter: [
					'all',
					['==', '$type', 'LineString'],
					['all', ['!has', 'service'], ['==', 'class', 'rail']],
				],
				layout: { 'line-join': 'round', visibility: 'visible' },
				paint: {
					'line-color': 'hsl(224, 20%, 41%)',
					'line-dasharray': [3, 3],
					'line-width': {
						base: 1.3,
						stops: [
							[16, 1.5],
							[20, 6],
						],
					},
				},
			},
			{
				id: 'highway_name_other',
				type: 'symbol',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation_name',
				filter: ['all', ['!=', 'class', 'motorway'], ['==', '$type', 'LineString']],
				layout: {
					'symbol-placement': 'line',
					'symbol-spacing': 350,
					'text-field': '{name:latin} {name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-max-angle': 30,
					'text-pitch-alignment': 'viewport',
					'text-rotation-alignment': 'map',
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': 'hsl(223, 31%, 61%)',
					'text-halo-blur': 0,
					'text-halo-color': 'hsl(232, 9%, 23%)',
					'text-halo-width': 2,
					'text-opacity': 1,
					'text-translate': [0, 0],
				},
			},
			{
				id: 'highway_ref',
				type: 'symbol',
				metadata: { 'mapbox:group': 'b6371a3f2f5a9932464fa3867530a2e5' },
				source: 'openmaptiles',
				'source-layer': 'transportation_name',
				filter: ['all', ['==', '$type', 'LineString'], ['==', 'class', 'motorway']],
				layout: {
					'symbol-placement': 'line',
					'symbol-spacing': 350,
					'text-field': '{ref}',
					'text-font': ['Open Sans Regular'],
					'text-pitch-alignment': 'viewport',
					'text-rotation-alignment': 'viewport',
					'text-size': 10,
					visibility: 'none',
				},
				paint: {
					'text-color': 'hsl(215, 57%, 77%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsl(209, 64%, 19%)',
					'text-halo-width': 1,
					'text-opacity': 1,
					'text-translate': [0, 2],
				},
			},
			{
				id: 'boundary_state',
				type: 'line',
				metadata: { 'mapbox:group': 'a14c9607bc7954ba1df7205bf660433f' },
				source: 'openmaptiles',
				'source-layer': 'boundary',
				filter: ['==', 'admin_level', 4],
				layout: {
					'line-cap': 'round',
					'line-join': 'round',
					visibility: 'visible',
				},
				paint: {
					'line-blur': 0.4,
					'line-color': 'hsla(195, 47%, 62%, 0.26)',
					'line-dasharray': [2, 2],
					'line-opacity': 1,
					'line-width': {
						base: 1.3,
						stops: [
							[3, 1],
							[22, 15],
						],
					},
				},
			},
			{
				id: 'boundary_country_z0-4',
				type: 'line',
				metadata: { 'mapbox:group': 'a14c9607bc7954ba1df7205bf660433f' },
				source: 'openmaptiles',
				'source-layer': 'boundary',
				maxzoom: 5,
				filter: ['all', ['==', 'admin_level', 2], ['!has', 'claimed_by']],
				layout: { 'line-cap': 'round', 'line-join': 'round' },
				paint: {
					'line-blur': {
						base: 1,
						stops: [
							[0, 0.4],
							[22, 4],
						],
					},
					'line-color': 'hsl(214, 63%, 76%)',
					'line-opacity': 0.56,
					'line-width': {
						base: 1.1,
						stops: [
							[3, 1],
							[22, 20],
						],
					},
				},
			},
			{
				id: 'boundary_country_z5-',
				type: 'line',
				metadata: { 'mapbox:group': 'a14c9607bc7954ba1df7205bf660433f' },
				source: 'openmaptiles',
				'source-layer': 'boundary',
				minzoom: 5,
				filter: ['==', 'admin_level', 2],
				layout: { 'line-cap': 'round', 'line-join': 'round' },
				paint: {
					'line-blur': {
						base: 1,
						stops: [
							[0, 0.4],
							[22, 4],
						],
					},
					'line-color': 'hsl(214, 63%, 76%)',
					'line-opacity': 0.56,
					'line-width': {
						base: 1.1,
						stops: [
							[3, 1],
							[22, 20],
						],
					},
				},
			},
			{
				id: 'waterway-name',
				type: 'symbol',
				source: 'openmaptiles',
				'source-layer': 'water_name',
				filter: ['==', '$type', 'LineString'],
				layout: {
					'symbol-placement': 'line',
					'symbol-spacing': 500,
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-rotation-alignment': 'map',
					'text-size': 12,
					visibility: 'visible',
				},
				paint: {
					'text-color': 'hsl(223, 21%, 52%)',
					'text-halo-blur': 0,
					'text-halo-color': 'hsl(232, 5%, 19%)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'building-3d',
				type: 'fill-extrusion',
				source: 'openmaptiles',
				'source-layer': 'building',
				minzoom: 14,
				paint: {
					'fill-extrusion-color': 'hsl(35, 8%, 85%)',
					'fill-extrusion-height': {
						property: 'render_height',
						type: 'identity',
					},
					'fill-extrusion-base': {
						property: 'render_min_height',
						type: 'identity',
					},
					'fill-extrusion-opacity': 0.4,
				},
			},
			{
				id: 'place_other',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 14,
				filter: [
					'all',
					['in', 'class', 'hamlet', 'neighbourhood', 'isolated_dwelling'],
					['==', '$type', 'Point'],
				],
				layout: {
					'text-anchor': 'center',
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-justify': 'center',
					'text-offset': [0.5, 0],
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': 'hsl(195, 37%, 73%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
					'text-opacity': 0.6,
				},
			},
			{
				id: 'place_suburb',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 15,
				filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'suburb']],
				layout: {
					'text-anchor': 'center',
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-justify': 'center',
					'text-offset': [0.5, 0],
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': 'hsl(195, 41%, 49%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'place_village',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 14,
				filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'village']],
				layout: {
					'icon-size': 0.4,
					'text-anchor': 'left',
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-justify': 'left',
					'text-offset': [0.5, 0.2],
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'icon-opacity': 0.7,
					'text-color': 'hsl(195, 41%, 49%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'place_town',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 15,
				filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'town']],
				layout: {
					'icon-image': {
						base: 1,
						stops: [
							[0, 'circle-11'],
							[9, ''],
						],
					},
					'icon-size': 0.4,
					'text-anchor': {
						base: 1,
						stops: [
							[0, 'left'],
							[8, 'center'],
						],
					},
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-justify': 'left',
					'text-offset': [0.5, 0.2],
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'icon-opacity': 0.7,
					'text-color': 'hsl(195, 25%, 76%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'place_city',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 14,
				filter: [
					'all',
					['==', '$type', 'Point'],
					['all', ['==', 'class', 'city'], ['>', 'rank', 3]],
				],
				layout: {
					'icon-size': 0.4,
					'text-anchor': {
						base: 1,
						stops: [
							[0, 'left'],
							[8, 'center'],
						],
					},
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-justify': 'left',
					'text-offset': [0.5, 0.2],
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'icon-opacity': 0.7,
					'text-color': 'hsl(195, 25%, 76%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'place_city_large',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 12,
				filter: [
					'all',
					['==', '$type', 'Point'],
					['all', ['<=', 'rank', 3], ['==', 'class', 'city']],
				],
				layout: {
					'icon-size': 0.4,
					'text-anchor': {
						base: 1,
						stops: [
							[0, 'left'],
							[8, 'center'],
						],
					},
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-justify': 'left',
					'text-offset': [0.5, 0.2],
					'text-size': 14,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'icon-opacity': 0.7,
					'text-color': 'hsl(195, 25%, 76%)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'place_state',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 12,
				filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'state']],
				layout: {
					'text-field': '{name:latin}\n{name:nonlatin}',
					'text-font': ['Open Sans Regular'],
					'text-size': 10,
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': 'rgb(113, 129, 144)',
					'text-halo-blur': 1,
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1,
				},
			},
			{
				id: 'place_country_other',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 8,
				filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'country'], ['!has', 'iso_a2']],
				layout: {
					'text-field': '{name:latin}',
					'text-font': ['Open Sans Regular'],
					'text-size': {
						base: 1,
						stops: [
							[0, 9],
							[6, 11],
						],
					},
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': {
						base: 1,
						stops: [
							[3, 'rgb(157,169,177)'],
							[4, 'rgb(153, 153, 153)'],
						],
					},
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1.4,
					'text-opacity': 1,
				},
			},
			{
				id: 'place_country_minor',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 8,
				filter: [
					'all',
					['==', '$type', 'Point'],
					['==', 'class', 'country'],
					['>=', 'rank', 2],
					['has', 'iso_a2'],
				],
				layout: {
					'text-field': '{name:latin}',
					'text-font': ['Open Sans Regular'],
					'text-size': {
						base: 1,
						stops: [
							[0, 10],
							[6, 12],
						],
					},
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': {
						base: 1,
						stops: [
							[3, 'rgb(157,169,177)'],
							[4, 'rgb(153, 153, 153)'],
						],
					},
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1.4,
					'text-opacity': 1,
				},
			},
			{
				id: 'place_country_major',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 6,
				filter: [
					'all',
					['==', '$type', 'Point'],
					['<=', 'rank', 1],
					['==', 'class', 'country'],
					['has', 'iso_a2'],
				],
				layout: {
					'text-anchor': 'center',
					'text-field': '{name:latin}',
					'text-font': ['Open Sans Regular'],
					'text-size': {
						base: 1.4,
						stops: [
							[0, 10],
							[3, 12],
							[4, 14],
						],
					},
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': {
						base: 1,
						stops: [
							[3, 'rgb(157,169,177)'],
							[4, 'rgb(153, 153, 153)'],
						],
					},
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1.4,
					'text-opacity': 1,
				},
			},
			{
				id: 'place_continent',
				type: 'symbol',
				metadata: { 'mapbox:group': '101da9f13b64a08fa4b6ac1168e89e5f' },
				source: 'openmaptiles',
				'source-layer': 'place',
				maxzoom: 6,
				filter: ['all', ['==', '$type', 'Point'], ['==', 'class', 'continent']],
				layout: {
					'text-anchor': 'center',
					'text-field': '{name:latin}',
					'text-font': ['Open Sans Regular'],
					'text-size': {
						base: 1.4,
						stops: [
							[0, 10],
							[3, 12],
							[4, 14],
						],
					},
					'text-transform': 'uppercase',
					visibility: 'visible',
				},
				paint: {
					'text-color': 'hsl(0, 0%, 100%)',
					'text-halo-color': 'hsla(228, 60%, 21%, 0.7)',
					'text-halo-width': 1.4,
					'text-opacity': {
						base: 1,
						stops: [
							[0, 0.6],
							[3, 0],
						],
					},
				},
			},
			{
				id: 'housenumber',
				type: 'symbol',
				source: 'openmaptiles',
				'source-layer': 'housenumber',
				minzoom: 17,
				filter: ['==', '$type', 'Point'],
				layout: {
					'text-field': '{housenumber}',
					'text-font': ['Open Sans Regular'],
					'text-size': 10,
				},
				paint: {
					'text-color': 'hsl(0, 0%, 100%)',
				},
			},
		],
		id: 'ciwlw4z7800092qmvzlut41tx',
	};
};
export default getStyle;
